<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://mybatis.org/schema/mybatis-spring
           http://mybatis.org/schema/mybatis-spring-1.2.xsd">

    <!-- [1] HikariCP DataSource 설정 -->
    <!-- MySQL 연결 설정 + 커넥션풀(HikariCP) 사용 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bootcamp" />
        <property name="username" value="root" />
        <property name="password" value="12345" />
        <property name="maximumPoolSize" value="10"/>
    </bean>

    <!-- [2] SqlSessionFactory 설정 -->
    <!-- MyBatis에서 SQL 실행을 위한 핵심 객체 (Connection + 매퍼 정보 포함) -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 위에서 정의한 HikariCP DataSource 주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- Mapper XML 경로 지정: classpath 기준으로 재귀 탐색 -->
        <property name="mapperLocations" value="classpath:mybatis-config/mapper/**/*.xml" />
    </bean>

    <!-- [3] Mapper 인터페이스 자동 스캔 -->
    <!-- repository 패키지에 있는 Mapper 인터페이스를 자동으로 빈 등록 -->
    <mybatis-spring:scan base-package="repository" />

    <!-- [4] 트랜잭션 매니저 등록 -->
    <!-- Spring의 @Transactional 처리를 위해 필수 설정 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 트랜잭션 처리에 사용할 DataSource 지정 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- [5] @Transactional 어노테이션 활성화 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
